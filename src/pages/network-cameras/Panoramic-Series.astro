---
import Layout from '../../layouts/Layout.astro';
import Icon from 'astro-icon';
---

<Layout title="Panoramic Series | Network Cameras">
  <!-- Product Information Section -->
  <section class="py-20 bg-gradient-to-b from-purple-50 to-white">
    <div class="container mx-auto px-4">
      <div class="max-w-6xl mx-auto">
        <h1 class="text-4xl font-bold text-gray-900 mb-8">Panoramic Series</h1>

        <!-- Header Image Section -->
        <div class="w-full mb-12 rounded-lg overflow-hidden shadow-lg">
          <img
            src="/src/assets/proSeries/heroimg.jpg"
            alt="Panoramic Series Surveillance"
            class="w-full h-[400px] object-cover"
          />
        </div>

        <!-- Product Description Section -->
        <div class="mb-12 space-y-6">
          <div class="space-y-4">
            <h2 class="text-2xl font-semibold text-gray-900">Panoramic Series - Advanced Surveillance Solutions</h2>
            <p class="text-gray-700">Our Panoramic Series cameras offer advanced features and functionality, providing high-quality surveillance solutions for various applications. These cameras are designed with cutting-edge technology to deliver superior performance and reliability.</p>
            <p class="text-gray-700">With features like intelligent video analysis, high-definition imaging, and robust build quality, the Panoramic Series cameras are ideal for professional security needs.</p>
            <p class="text-gray-700">Explore our range of Panoramic Series cameras and find the perfect solution for your surveillance requirements.</p>
          </div>
        </div>

        <!-- Product Categories Tabs -->
        <div class="mb-12">
          <div class="flex flex-wrap space-x-4 border-b border-gray-200">
            {['Multi-Sensor', 'Fisheye'].map((category, index) => (
              <button
                class={`category-btn px-6 py-3 text-sm font-medium transition-colors duration-200 ${index === 0 ? 'text-purple-600 border-b-2 border-purple-600' : 'text-gray-600 hover:text-purple-600'}`}
                data-category={category}
                onclick="showCategory(event)"
              >
                {category}
              </button>
            ))}
          </div>
        </div>

        <!-- Product Grid -->
        <div class="product-grid flex flex-wrap gap-4 justify-center"></div>
      </div>
    </div>
  </section>
</Layout>

<style>
  /* Add smooth scrolling */
  html {
    scroll-behavior: smooth;
  }
</style>

<script>
  const products = [
    // Products for Multi-Sensor category
    {
      id: 'PSDW5631S-B360',
      name: '3x2MP Multi-Sensor Network Camera+PTZ Camera',
      image: '/src/assets/PanoramicSeries/psdw5631s-b360.png',
      category: 'Multi-Sensor'
    },
    {
      id: 'IPC-PDBW5831-B360',
      name: '4 Ã— 2 MP 4-Directional Panoramic Dome Network Camera',
      image: '/src/assets/PanoramicSeries/ipc-pdbw5831-b360.png',
      category: 'Multi-Sensor'
    },
    // Product for Fisheye category
    {
      id: 'IPC-EBW81230',
      name: '12MP Panoramic Network IR Fisheye Camera',
      image: '/src/assets/PanoramicSeries/ipc-ebw81230.png',
      category: 'Fisheye'
    }
  ];

  // Declare showCategory on the window object
  declare global {
    interface Window {
      showCategory: (event: Event) => void;
    }
  }

  // Function to handle category button click
  function showCategory(event: Event) {
    const target = event.target as HTMLElement;
    if (!target) return;
    const category = target.dataset.category;
    if (category) {
      currentCategory = category;
    }

    // Update UI for category buttons
    document.querySelectorAll('.category-btn').forEach(btn => {
      btn.classList.remove('text-purple-600', 'border-b-2', 'border-purple-600');
      btn.classList.add('text-gray-600');
    });
    target.classList.add('text-purple-600', 'border-b-2', 'border-purple-600');

    filterProducts();
  }

  // Bind showCategory function to the window object
  window.showCategory = showCategory;

  let currentCategory = 'Multi-Sensor';

  // Function to filter products based on current category
  function filterProducts() {
    const filteredProducts = products.filter(product => product.category === currentCategory);
    updateProductGrid(filteredProducts);
  }

  // Function to update the product grid with filtered products
  function updateProductGrid(productList: { id: string; name: string; image: string; category: string }[]) {
    const productGrid = document.querySelector('.product-grid');
    if (productGrid) {
      productGrid.innerHTML = productList.map(product => `
        <div class="flex-shrink-0 w-[300px] bg-white rounded-lg shadow-md overflow-hidden hover:shadow-lg transition-all duration-300 relative">
          <!-- CCTV Icon -->
          <div class="absolute top-2 right-2 flex gap-1.5">
            <Icon name="cctv" class="w-5 h-5" />
          </div>
          
          <div class="p-4">
            <div class="aspect-square bg-gray-50 rounded-lg mb-4 flex items-center justify-center">
              <img 
                src="${product.image}" 
                alt="${product.name}"
                class="object-contain h-40 w-40 hover:scale-110 transition-transform duration-500"
              />
            </div>
            <div class="space-y-2">
              <h3 class="text-lg font-bold text-gray-900">${product.id}</h3>
              <p class="text-gray-600 text-sm line-clamp-3">${product.name}</p>
              <a 
                href="/products/${product.id}"
                target="_blank"
                rel="noopener noreferrer"
                class="inline-flex items-center gap-2 text-sm text-purple-600 hover:text-purple-700 mt-2 group"
              >
                View Details
                <svg class="w-4 h-4 transition-transform group-hover:translate-x-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"/>
                </svg>
              </a>
            </div>
          </div>
        </div>
      `).join('');
    }
  }

  // Add event listener initialization when the document loads
  document.addEventListener('DOMContentLoaded', () => {
    // Add click event listeners to category buttons
    document.querySelectorAll('.category-btn').forEach(btn => {
      btn.addEventListener('click', (event) => window.showCategory(event));
    });

    // Initial filter to show default products
    filterProducts();
  });
</script>